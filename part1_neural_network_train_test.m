function [valid_acc, test_acc] = part1_neural_network_train_test( ...
    net, max_epochs, ...
    init_lr, lr_schedule, lr_drop_factor, lr_drop_period, ...
    optimizer, miniBatchSize, ...
    train_f, train_l, valid_f, valid_l, test_f, test_l)
    

    % train config
    options = trainingOptions(optimizer, ...
     'MiniBatchSize',miniBatchSize, ...
     'MaxEpochs',max_epochs, ...
     'InitialLearnRate',init_lr, ...
     'LearnRateSchedule', lr_schedule, ...
     'LearnRateDropFactor', lr_drop_factor, ...
     'LearnRateDropPeriod', lr_drop_period, ...
     'Shuffle','every-epoch', ...
     'ValidationData',{valid_f, valid_l}, ...
     'ValidationFrequency',30, ...
     'Verbose',false, ...
     'Plots','training-progress');

    net = trainNetwork(train_f, train_l, net, options);

    % test on valdationset
    pred_valid = classify(net, valid_f);
    valid_acc = mean(pred_valid == valid_l);
    
    % test on testset
    pred_test = classify(net, test_f);
    test_acc = mean(pred_test == test_l);

end